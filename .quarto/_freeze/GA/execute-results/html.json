{
  "hash": "6aa07b8ae2da5bd29ba49c756f3c69db",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Genetic Algorithms in R\"\nsubtitle: \"Việt Nam, 2024\"\ncategories: [\"SupplyChainManagement\", \"Logistics\",\"Genetic Algorithm\"]\ndescription: \"Đây là bài viết của tôi về cách sử dụng R trong ứng dụng Genetic Algorithm trong Supply Chain\"\nnumber-sections: true\nformat: \n  html:\n    code-fold: true\n    code-tools: true\ncrossref:\n  labels: alpha a        \n  subref-labels: roman\nfilters:\n  - quarto-ext/shinylive\nbibliography: references.bib\n---\n\n# Giới thiệu:\n\n\n::: {.cell}\n\n:::\n\n\n## Vài điểm về thuật toán Genetic:\n\n**GA** hay **Genetic Algorithm** là 1 thuật toán tối ưu hóa ngẫu nhiên (**stochastic search algorithms**), được phát triển dựa trên lý thuyết tiến hóa và sự chọn lọc tự nhiên của sinh học [@lucascrucca2013].\n\nỞ thời cấp 3, bạn đã từng học về lý thuyết tiến hóa và chọn lọc tự nhiên của [Charles Darwin](https://vi.wikipedia.org/wiki/Charles_Darwin) và [Alfred Russel](https://vi.wikipedia.org/wiki/Alfred_Russel_Wallace) ở môn Sinh học. Nếu bạn cũng từng liệt Sinh như tôi thì bạn quên cũng không sao 😅😅. Vậy thì để tôi giải thích lại như sau:\n\nSự tiến hóa là sự thay đổi đặc điểm di truyền của 1 quần thể sinh vật, ví dụ điển hình chính là từ loại vượn đã tiến hóa thành hình dạng con người văn minh như các bạn bây giờ. Vậy quá trình tiến hóa đó diễn ra khi có sự chọn lọc tự nhiên tạo ra các biến dị di truyền (Ví dụ: đột biến,...) và kết quả là các cá thể đột biến trở nên phổ biến hơn hoặc hiếm gặp hơn trong quần thể. Vậy điều kiện để xảy ra sự chọn lọc tự nhiên có thể là sự thay đổi về môi trường sống, địa lý,... dẫn tới sự khác nhau về khả năng sống sót và sinh sản.\n\nKết cục là xuất hiện các cá thể đột biến \"mạnh mẽ hơn\" hoặc đúng là \"đặc biệt hơn\" có khả năng tồn tại khi xuất hiện sự thay đổi lớn, ví dụ như dưới đây, do sự thay đổi về địa điểm sống, từ một loại chim sẻ đã phát triển thành 3 phân họ khác nhau.\n\n```{=html}\n<div style=\"text-align: center; margin-bottom: 20px;\">\n  <img src=\"img/Natural_selection.jpg\" style=\"max-width: 80%; height: auto; display: block; margin: 0 auto;\">\n  \n  <!-- Picture Name -->\n  <div style=\"text-align: left; margin-top: 10px;\">\n    Hình 1: Ví dụ về chọn lọc tự nhiên\n  </div>\n  \n  <!-- Source Link -->\n  <div style=\"text-align: right; font-style: italic; margin-top: 5px;\">\n    Source: <a href=\"https://www.biologyonline.com/dictionary/natural-selection\">Link to Image</a>\n  </div>\n</div>\n```\n\nVậy lí thuyết này liên quan gì tới vấn đề tối ưu hóa. Thông thường khi bạn muốn tối ưu hóa một vấn đề gì đó, bạn cần xây dựng mô hình định lượng nó, ví dụ như dưới ảnh này ta đang có mô hình [MILP](https://www.mathworks.com/help/optim/ug/mixed-integer-linear-programming-algorithms.html) nhằm hoạch định tuyến đường và tối ưu hóa quãng đường di chuyển.\n\n```{=html}\n<div style=\"text-align: center; margin-bottom: 20px;\">\n  <img src=\"img/MILP.png\" style=\"max-width: 100%; height: auto; display: block; margin: 0 auto;\">\n  \n  <!-- Picture Name -->\n  <div style=\"text-align: left; margin-top: 10px;\">\n    Hình 2: Mô hình VRP\n  </div>\n  \n  <!-- Source Link -->\n  <div style=\"text-align: right; font-style: italic; margin-top: 5px;\">\n    Source: <a href=\"https://medium.com/@rihot_gusron/capacitated-vehicle-routing-problem-with-lingo-427c2d3bf724\">Link to Image</a>\n  </div>\n</div>\n```\n\nMục tiêu của hàm chính là tìm ra giá trị nhỏ nhất nghĩa là chi phí cho việc di chuyển của xe là nhỏ nhất. Do đó, bạn có thể hình dung rằng **giá trị nhỏ nhất** đó như là các **cá thể đột biến** có khả năng sống sót cao nhất trong quẩn thể.\n\nVì vậy thuật toán **Genetic** (GA) chính là lặp đi lặp lại sự chọn lọc tự nhiên trong một quần thể hoặc một mẫu để đến cuối cùng tìm ra cá thể vượt trội nhất.\n\n## Cách hoạt động GA trong ML:\n\nTrong Machine Learning, GA nhằm tìm ra đúng các biến cần thiết để xây dựng mô hình tốt nhất. Gỉa sử chúng ta có 2 mô hình là:\n\n-   Mô hình 1: gồm các biến A,C,D.\n-   Mô hình 2: gồm biến A,B,E.\n\nVậy mô hình nào mới là tốt nhất cho mô hình dự đoán ? Chúng ta chưa biết được và chỉ có thể so sánh nó thông qua thuật toán Genetic.\n\nVề quy trình, thuật toán Genetic sẽ có cách hoạt động như dưới đây. Quy trình này mình tham khảo của [@rohithgandhi2018].\n\n```{=html}\n<div style=\"text-align: center; margin-bottom: 20px;\">\n  <img src=\"img/Genetic_Algorithm.png\" style=\"max-width: 100%; height: auto; display: block; margin: 0 auto;\">\n  \n  <!-- Picture Name -->\n  <div style=\"text-align: left; margin-top: 10px;\">\n    Hình 3: Thuật toán Genetic\n  </div>\n  \n  <!-- Source Link -->\n  <div style=\"text-align: right; font-style: italic; margin-top: 5px;\">\n    Source: <a href=\"https://medium.datadriveninvestor.com/genetic-algorithms-9f920939f7cc\">Link to Image</a>\n  </div>\n</div>\n```\n\nDiễn giải cách hoạt động:\n\n-   Bước 1 (**Initialisation**): mỗi biến được xem là *Gene* và nhiều *Gene* gộp lại thành một mô hình hay gọi là *Chromosome* và nhiều *Chromosome* sẽ tạo thành một quần thể (*Population*). Việc này giống như là bạn đang trình bày hết các phương án có thể sử dụng.\n\n```{=html}\n<div style=\"text-align: center; margin-bottom: 20px;\">\n  <img src=\"img/Term.png\" style=\"max-width: 100%; height: auto; display: block; margin: 0 auto;\">\n  \n  <!-- Picture Name -->\n  <div style=\"text-align: left; margin-top: 10px;\">\n    Hình 4: Các thuật ngữ trong GA\n  </div>\n  \n  <!-- Source Link -->\n  <div style=\"text-align: right; font-style: italic; margin-top: 5px;\">\n    Source: <a href=\"https://www.doc.ic.ac.uk/research/technicalreports/2003/DTR03-4.pdf\">Link to Image</a>\n  </div>\n</div>\n```\n\n-   Bước 2 (**Fitness Function**): Bạn cần xây dựng một hàm mục tiêu để tính toán giá trị cho các mô hình ở bước 1.\n\n-   Bước 3 (**Selection**): Biến nào có giá trị yếu kém sẽ bị loại và quá trình tính toán sẽ tiếp tục ở thế hệ của nó tiếp theo. Diễn giải đơn giản hơn là chúng ta thử một cách khác và cố gắng cải thiện kết quả.\n\n-   Bước 4 (**Crossover**): Tạo ra mô hình gồm các biến tốt đã lựa chọn ở bước 3. Ví dụ như biến A, B là tốt cho mô hình.\n\n-   Bước 5 (**Mutation**): Thay đổi mô hình đầu vào đã bao gồm các biến ở bước 4 và bắt đầu lại từ bước 1. Ví dụ mô hình cần chọn gồm 5 biến và ta đã chọn được biến A,B là tốt. Do đó, khi quay lại bước 1, ta chỉ cần chọn thêm 3 biến thay vì 5 biến như thông thường.\n\n# Thực hành trong R:\n\nSau khi đã sơ lược về thuật toán, bây giờ ta sẽ vào phần thực hành trong R. Vậy làm sao để ứng dụng thuật toán Genetic trong R, mình đã kham khảo qua nhiều nguồn tài liệu và tổng hợp dưới đây:\n\n**Xây dựng hàm mục tiêu**: hàm mục tiêu là bước quan trọng nhất trong thuật toán Genetic vì nó là cơ sở để đánh giá và lựa chọn cá thể vượt trội nhất. Và hàm mục tiêu sẽ luôn khác nhau tùy vào vấn đề mà ta đặt ra. Giả sử chúng ta muốn tối ưu chi phí thì nó là hàm Min, còn ta muốn tối đa lợi nhuận thì nó sẽ là hàm Max.\n\nVậy hàm mục tiêu của bài toán trên trong R, bạn có thể tham khảo phần code bên dưới mình:\n\n::: callout-important\n### Type of fitness function\n\nĐối số `type` trong hàm có 3 giá trị:\n\n-   `\"binary\"`: đại diện cho biến quyết định dạng phân loại, ví dụ: có/không\n-   `\"real-valued\"`: dùng dể tối ưu cho các biến quyết định là dạng số thực, số tự nhiên.\n-   `\"permutation\"`: cho các vấn đề liên quan đến việc sắp xếp lại các biến thành danh sách, ví dụ: thang đo Likert.\n:::\n\nChi tiết về hàm `ga()`, bạn có thể tham khảo tài liệu của [@lucascrucca2013].\n\n## Thuật toán Genetic:\n\nVậy bây giờ chúng ta sẽ xử lí bài toán trên theo thuật toán **Genetic**\n\nGỉa sử chúng ta có bài toán về vận chuyển hàng từ nhà kho để thỏa mãn nhu cầu ở các điểm **DC (Distribution center)**. Và công thức để tính toán được chi phí là:\n\nHàm chi phí tổng thể được xác định như sau:\n\n$$\nTC = \\sum_{i=1}^{m} \\left( D_{ij} \\times \\frac{P}{F} \\times 0.4 + LC_i \\right) \\times Q_j\n$$\n\nTrong bài toán này, bạn sẽ cần dữ liệu để tính toán 2 thông số là: **Phí bốc xếp (Loading cost)** và **Chi phí vận chuyển (Transportation cost)**.\n\nNếu trong công việc thường ngày ở công ty, chúng ta sẽ cần lấy dữ liệu từ **Data warehouse** bằng SQL hoặc các phần mềm **Business Intelligence** khác. Ở đây, nhằm mục đích học tập, mình đã tạo ra code ở phía dưới để xây dựng dữ liệu cho các bạn luyện tập.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data frame for loading costs\nloading_costs <- data.frame(\n  Warehouse = rep(paste(\"WH\", 1:5), each = 4),\n  ID = rep(1:5, times = 4),\n  Weight_Category = rep(c(\"< 2 tons\", \"2 to 5 tons\", \"5 to 10 tons\", \"> 10 tons\"), times = 5),\n  Has_Machine = rep(c(\"Yes\", \"No\", \"Yes\", \"No\", \"No\"), each = 4),\n  Loading_Cost = c(80, 100, 120, 160,  # Warehouse 1 (with machine)\n                   110, 150, 180, 210,  # Warehouse 2 (without machine)\n                   85, 105, 125, 140,  # Warehouse 3 (with machine)\n                   150, 170, 190, 210,  # Warehouse 4 (without machine)\n                   140, 165, 185, 215)   # Warehouse 5 (without machine)\n)\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Define parameters\nweight_categories <- c(\"< 1.5\", \"1.5 to 2.5\", \"2.5 to 5\", \"5 to 10\", \"> 10\")\n# Create the data frame\nloading_costs <- data.frame(\n  Warehouse = rep(1:5, each = 15),  # 5 warehouses, 15 rows each\n  DC = rep(rep(1:3, each = 5), times = 5),  # Repeat 1, 2, 3 for each warehouse\n  Weight_Category = rep(weight_categories, times = 15),  # Repeat categories for 15 rows\n  Loading_Cost = round(runif(75, 5, 150), 2),\n  Has_Machine = sample(c(\"Yes\", \"No\"), 75, replace = TRUE)\n)\n\n# Define warehouses with coordinates (latitude, longitude)\nwarehouses <- data.frame(\n  ID = 1:5,\n  Latitude = c(21.0285, 16.0545, 10.7769, 14.0583, 19.8060), # Example latitudes (Hanoi, HCMC, Da Nang, etc.)\n  Longitude = c(105.804, 108.2022, 106.6957, 108.2772, 105.7460) # Example longitudes\n)\n\n# Define distribution centers data in Vietnam (example coordinates)\ndistribution_centers <- data.frame(\n  ID = 1:3,\n  Demand = c(90, 30, 150),\n  Latitude = c(17.974855, 11.7769, 15.122327), # Example latitudes (Hanoi, Da Nang, HCMC)\n  Longitude = c(102.630867, 106.6957, 108.799357) # Example longitudes\n)\n```\n:::\n\n\nNếu bạn từng gặp khó khăn trong việc phải đối mặt với cả đống dữ liệu từ hệ thống và chưa biết lấy dữ liệu nào để phân tích hoặc gộp bảng nào qua bảng nào thì lời khuyên của mình là hãy vẽ bảng **Entity relation diagram (ERD)**.\n\n**ERD** là một công cụ trực quan dùng để mô tả cấu trúc dữ liệu trong cơ sở dữ liệu. ERD thể hiện các thực thể (*entities*), thuộc tính (*attributes*), và các mối quan hệ (*relationships*) giữa chúng. Các thực thể thường được biểu diễn dưới dạng hình chữ nhật, thuộc tính dưới dạng hình ellips, và mối quan hệ bằng hình thoi hoặc đường nối. ERD giúp lập kế hoạch cho thiết kế cơ sở dữ liệu, đảm bảo rằng các yếu tố dữ liệu và quan hệ giữa chúng được xác định rõ ràng, tạo nền tảng cho việc phát triển và quản lý dữ liệu hiệu quả.\n\nNhư biểu đồ dưới đây, mình đang có 3 bảng gồm:\n\n-   Bảng thông tin chi tiết về DC.\n\n-   Bảng thông tin chi tiết về WH.\n\n-   Bảng giá về loading cost và transportation cost từ WH đến DC.\n\nVà các bạn có thể dễ dàng hình dung các mối quan hệ thông qua bảng **Entity relation diagram (ERD)** dưới đây:\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"grViz html-widget html-fill-item\" id=\"htmlwidget-f25d4e1770d66a86dcce\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f25d4e1770d66a86dcce\">{\"x\":{\"diagram\":\"#data_model\\ndigraph {\\ngraph [rankdir=LR tooltip=\\\"Data Model\\\" ]\\n\\nnode [margin=0 fontcolor = \\\"#444444\\\" ]\\n\\nedge [color = \\\"#555555\\\", arrowsize = 1, ]\\n\\n\\n  \\\"Distribution_Centers\\\" [label = <<TABLE ALIGN=\\\"LEFT\\\" BORDER=\\\"1\\\" CELLBORDER=\\\"0\\\" CELLSPACING=\\\"0\\\" COLOR=\\\"#555555\\\">\\n    <TR>\\n      <TD COLSPAN=\\\"1\\\" BGCOLOR=\\\"#EFEBDD\\\" BORDER=\\\"0\\\"><FONT COLOR=\\\"#000000\\\">Distribution_Centers<\\/FONT>\\n<\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\" PORT=\\\"ID\\\"><U>ID<\\/U><\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\">Demand<\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\">Latitude<\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\">Longitude<\\/TD>\\n    <\\/TR>\\n  <\\/TABLE>>, shape = \\\"plaintext\\\"] \\n\\n  \\\"Loading_Costs\\\" [label = <<TABLE ALIGN=\\\"LEFT\\\" BORDER=\\\"1\\\" CELLBORDER=\\\"0\\\" CELLSPACING=\\\"0\\\" COLOR=\\\"#555555\\\">\\n    <TR>\\n      <TD COLSPAN=\\\"1\\\" BGCOLOR=\\\"#EFEBDD\\\" BORDER=\\\"0\\\"><FONT COLOR=\\\"#000000\\\">Loading_Costs<\\/FONT>\\n<\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\" PORT=\\\"Warehouse\\\"><U>Warehouse<\\/U><\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\" PORT=\\\"DC\\\"><U>DC<\\/U><\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\">Weight_Category<\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\">Loading_Cost<\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\">Has_Machine<\\/TD>\\n    <\\/TR>\\n  <\\/TABLE>>, shape = \\\"plaintext\\\"] \\n\\n  \\\"Warehouses\\\" [label = <<TABLE ALIGN=\\\"LEFT\\\" BORDER=\\\"1\\\" CELLBORDER=\\\"0\\\" CELLSPACING=\\\"0\\\" COLOR=\\\"#555555\\\">\\n    <TR>\\n      <TD COLSPAN=\\\"1\\\" BGCOLOR=\\\"#EFEBDD\\\" BORDER=\\\"0\\\"><FONT COLOR=\\\"#000000\\\">Warehouses<\\/FONT>\\n<\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\" PORT=\\\"ID\\\"><U>ID<\\/U><\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\">Latitude<\\/TD>\\n    <\\/TR>\\n    <TR>\\n      <TD ALIGN=\\\"LEFT\\\" BGCOLOR=\\\"#FFFFFF\\\">Longitude<\\/TD>\\n    <\\/TR>\\n  <\\/TABLE>>, shape = \\\"plaintext\\\"] \\n\\n\\\"Loading_Costs\\\":\\\"Warehouse\\\"->\\\"Warehouses\\\":\\\"ID\\\"\\n\\\"Loading_Costs\\\":\\\"DC\\\"->\\\"Distribution_Centers\\\":\\\"ID\\\"\\n}\",\"config\":{\"engine\":null,\"options\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n\nBiểu đồ 1: EDR model\n:::\n:::\n\n\n::: callout-tip\n### Tải package datamodelr:\n\nMình tạo biểu đồ này bằng thư viện `datamodelr`. Bạn có thể tải bằng cú pháp: `devtools::install_github(\"bergant/datamodelr\")`\n:::\n\n### Dữ liệu đầu vào:\n\nNhư vậy, dựa vào đó, ta sẽ tính toán được 2 *matrix* về chi phí:\n\n-   Bảng giá loading ở các kho. (Hình bên trái)\n\n-   Bảng chi phí vận chuyển từ từng WH đến các DCs. (Hình bên phải)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Calculate the transportation cost:\n# Haversine distance function\nhaversine <- function(lat1, lon1, lat2, lon2) {\n  R <- 6371 # Radius of Earth in kilometers\n  dlat <- (lat2 - lat1) * pi / 180\n  dlon <- (lon2 - lon1) * pi / 180\n  a <- sin(dlat / 2) * sin(dlat / 2) +\n       cos(lat1 * pi / 180) * cos(lat2 * pi / 180) * \n       sin(dlon / 2) * sin(dlon / 2)\n  c <- 2 * atan2(sqrt(a), sqrt(1 - a))\n  R * c # Distance in kilometers\n}\n\n# Calculate distance matrix based on coordinates\ndistance_matrix <- matrix(0, nrow = nrow(warehouses), ncol = nrow(distribution_centers))\n\nfor (i in 1:nrow(warehouses)) {\n  for (j in 1:nrow(distribution_centers)) {\n    distance_matrix[i, j] <- haversine(\n      warehouses$Latitude[i], warehouses$Longitude[i],\n      distribution_centers$Latitude[j], distribution_centers$Longitude[j]\n    )\n  }\n}\n\n# Define the fuel price (example value)\nfuel_price <- 20 # Fuel price per kilometer\n\n# Calculate transportation costs\ntransportation_costs <- distance_matrix * fuel_price * 0.4\n\n## Calculate the loading cost:\nweights_per_good <- 0.1\n\nmean_loading_cost<-loading_costs |> \n  group_by(DC, Warehouse) |> \n  summarise(mean = mean(Loading_Cost,na.rm = TRUE)/1000/weights_per_good) |> # Assumes weighted of goods is 0.1kg \n  ungroup()\n\nlibrary(data.table)\n# Reshape the data frame to a wide format\nmean_cost_matrix <- reshape2::dcast(mean_loading_cost,\n                          Warehouse ~ DC, \n                          value.var = \"mean\")\n\n# Convert the data frame to a matrix and remove the Warehouse column\nloading_costs_per_dc <- as.matrix(mean_cost_matrix[,-1])\n\n# Set row names as the warehouse names\nrownames(loading_costs_per_dc) <- mean_loading_cost$Warehouse[!duplicated(mean_loading_cost$Warehouse)]\n```\n:::\n\n\n\n::: {.panel-tabset}\n\n#### Bảng chi phí bốc xếp\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Biểu đồ 2: Heatmap cho bảng chi phí bốc xếp](GA_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n#### Bảng giá vận chuyển:\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"soxqwkgowz\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#soxqwkgowz table {\n  font-family: Roboto, system-ui, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#soxqwkgowz thead, #soxqwkgowz tbody, #soxqwkgowz tfoot, #soxqwkgowz tr, #soxqwkgowz td, #soxqwkgowz th {\n  border-style: none;\n}\n\n#soxqwkgowz p {\n  margin: 0;\n  padding: 0;\n}\n\n#soxqwkgowz .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 12px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 1px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#soxqwkgowz .gt_title {\n  color: #333333;\n  font-size: 30px;\n  font-weight: bold;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#soxqwkgowz .gt_subtitle {\n  color: #333333;\n  font-size: 16px;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#soxqwkgowz .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: rgba(255, 255, 255, 0);\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 6px;\n  padding-bottom: 7px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#soxqwkgowz .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#soxqwkgowz .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#soxqwkgowz .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#soxqwkgowz .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 3px;\n  border-bottom-color: rgba(255, 255, 255, 0);\n  vertical-align: bottom;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#soxqwkgowz .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#soxqwkgowz .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#soxqwkgowz .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#soxqwkgowz .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#soxqwkgowz .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#soxqwkgowz .gt_row {\n  padding-top: 6px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#soxqwkgowz .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soxqwkgowz .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#soxqwkgowz .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#soxqwkgowz .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#soxqwkgowz .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soxqwkgowz .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#soxqwkgowz .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soxqwkgowz .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_striped {\n  background-color: #F5F5F5;\n}\n\n#soxqwkgowz .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soxqwkgowz .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#soxqwkgowz .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#soxqwkgowz .gt_left {\n  text-align: left;\n}\n\n#soxqwkgowz .gt_center {\n  text-align: center;\n}\n\n#soxqwkgowz .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#soxqwkgowz .gt_font_normal {\n  font-weight: normal;\n}\n\n#soxqwkgowz .gt_font_bold {\n  font-weight: bold;\n}\n\n#soxqwkgowz .gt_font_italic {\n  font-style: italic;\n}\n\n#soxqwkgowz .gt_super {\n  font-size: 65%;\n}\n\n#soxqwkgowz .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#soxqwkgowz .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#soxqwkgowz .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#soxqwkgowz .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#soxqwkgowz .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#soxqwkgowz .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#soxqwkgowz .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#soxqwkgowz .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#soxqwkgowz div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_title gt_font_normal\" style><span data-qmd-base64=\"KipMb2FkaW5nIENvc3RzIGJ5IHdlaWdodCBjYXRlZ29yeSBpbiBlYWNoIHdhcmVob3VzZXMqKg==\"><span class='gt_from_md'><strong>Loading Costs by weight category in each warehouses</strong></span></span></td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"VGFibGUganVzdCBjb250YWlucyAqKmV4cGVjdGVkIGxvYWRpbmcgY29zdCoq\"><span class='gt_from_md'>Table just contains <strong>expected loading cost</strong></span></span></td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #585D63; color: #FFFFFF; font-size: 10px; font-weight: bold; text-align: center; border-bottom-width: 2.5px; border-bottom-style: solid; border-bottom-color: #585d63;\" scope=\"col\" id=\"Warehouse\">Warehouse</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #585D63; color: #FFFFFF; font-size: 10px; font-weight: bold; text-align: center; border-bottom-width: 2.5px; border-bottom-style: solid; border-bottom-color: #585d63;\" scope=\"col\" id=\"DC\">Distribution Center</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #585D63; color: #FFFFFF; font-size: 10px; font-weight: bold; text-align: center; border-bottom-width: 2.5px; border-bottom-style: solid; border-bottom-color: #585d63;\" scope=\"col\" id=\"Weight_Category\">Weight Category</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #585D63; color: #FFFFFF; font-size: 10px; font-weight: bold; text-align: center; border-bottom-width: 2.5px; border-bottom-style: solid; border-bottom-color: #585d63;\" scope=\"col\" id=\"Loading_Cost\">Loading Cost (VNĐ)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #585D63; color: #FFFFFF; font-size: 10px; font-weight: bold; text-align: center; border-bottom-width: 2.5px; border-bottom-style: solid; border-bottom-color: #585d63;\" scope=\"col\" id=\"Has_Machine\">Has Machine</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\" style=\"text-align: center;\">WH 2</td>\n<td headers=\"DC\" class=\"gt_row gt_left\" style=\"text-align: center;\">DC 2</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\" style=\"text-align: center; font-weight: bold\">5 to 10</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #440154; color: #FFFFFF; text-align: center;\">&#8363;149,170</td>\n<td headers=\"Has_Machine\" class=\"gt_row gt_left\" style=\"text-align: center;\">Yes</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">WH 3</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">DC 1</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center; font-weight: bold\">&lt; 1.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #306A8E; color: #FFFFFF; text-align: center;\">&#8363;144,640</td>\n<td headers=\"Has_Machine\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">No</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\" style=\"text-align: center;\">WH 1</td>\n<td headers=\"DC\" class=\"gt_row gt_left\" style=\"text-align: center;\">DC 3</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\" style=\"text-align: center; font-weight: bold\">&lt; 1.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #297A8E; color: #FFFFFF; text-align: center;\">&#8363;143,740</td>\n<td headers=\"Has_Machine\" class=\"gt_row gt_left\" style=\"text-align: center;\">No</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">WH 2</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">DC 1</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center; font-weight: bold\">&gt; 10</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #27808E; color: #FFFFFF; text-align: center;\">&#8363;143,400</td>\n<td headers=\"Has_Machine\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">No</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\" style=\"text-align: center;\">WH 1</td>\n<td headers=\"DC\" class=\"gt_row gt_left\" style=\"text-align: center;\">DC 1</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\" style=\"text-align: center; font-weight: bold\">&gt; 10</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #20A486; color: #FFFFFF; text-align: center;\">&#8363;141,370</td>\n<td headers=\"Has_Machine\" class=\"gt_row gt_left\" style=\"text-align: center;\">No</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">WH 3</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">DC 1</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center; font-weight: bold\">1.5 to 2.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FDE725; color: #000000; text-align: center;\">&#8363;135,830</td>\n<td headers=\"Has_Machine\" class=\"gt_row gt_left gt_striped\" style=\"text-align: center;\">Yes</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"5\"><span data-qmd-base64=\"KlNvdXJjZTogcGFja2FnZSBndCBpbiBSKg==\"><span class='gt_from_md'><em>Source: package gt in R</em></span></span></td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n\nBiểu đồ 3: Bảng giá vận chuyển từ WH đến DC\n:::\n:::\n\n\n:::\n\n### Xây dựng hàm mục tiêu:\n\nSau khi đã có đủ dữ liệu, bạn sẽ bắt đầu viết hàm mục tiêu và dùng thuật toán GA để tìm ra giá trị tối ưu nhất.\n\nTrong hàm `ga` từ gói **GA** trong R, có một số đối số quan trọng cho phép bạn tùy chỉnh thuật toán di truyền. Dưới đây là một cái nhìn tổng quan về một số đối số quan trọng:\n\n-   **type**: Chỉ định loại tối ưu hóa (ví dụ: `\"real-valued\"`, `\"binary\"` hoặc `\"permutation\"`).\n\n-   **fitness**: Hàm đánh giá độ phù hợp; nó nên nhận một vector tham số làm đầu vào và trả về một giá trị số.\n\n-   **lower** và **upper**: Định nghĩa giới hạn cho các biến nếu bạn đang tối ưu hóa trong không gian liên tục (dùng cho các loại giá trị thực).\n\n-   **popSize**: Thiết lập kích thước quần thể cho mỗi thế hệ.\n\n-   **maxiter**: Chỉ định số thế hệ tối đa để chạy thuật toán.\n\n-   **run**: Chỉ định số thế hệ để chạy thuật toán mà không có sự cải thiện trước khi dừng lại.\n\n-   **pmutation**: Xác suất xảy ra đột biến trong quần thể.\n\n-   **elitism**: Xác định xem các cá thể tốt nhất có nên được giữ lại trong thế hệ tiếp theo hay không.\n\nNhững đối số này giúp điều chỉnh thuật toán di truyền cho các nhu cầu tối ưu hóa cụ thể của bạn, cho phép hiệu suất tốt hơn và hội tụ về các giải pháp tối ưu.\n\nNgoài ra, còn có các lưu ý cho bạn khi sử dụng R như sau:\n\n::: callout-caution\n##### Lưu ý khi dùng hàm ga():\n\nHàm `ga()` phải có ít nhất 2 đối số là `type` và `fitness thì R mới chạy được.`\n\n-   Riêng khi type = \"binary\" thì cần thêm đối số `nBits.`\n\n-   Còn khi `type = \"real-valued\"/\"permutation\"` thì cần thêm đối số `min` và `max`.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary library\nlibrary(GA)\ndemand<-c(distribution_centers$Demand)\n\n# Define the objective function\nobjective_function <- function(quantities) {\n    quantities_matrix <- matrix(quantities, \n                                nrow = 5, \n                                ncol = 3, \n                                byrow = TRUE)\n    \n    # Calculate total loading costs\n    loading_costs <- rowSums(quantities_matrix) * loading_costs_per_dc  # Total loading costs for each DC\n    # Calculate total transportation costs\n    transportation_costs <- sum(quantities_matrix * transportation_costs)\n    \n    # Combine both costs\n    total_cost <- sum(loading_costs) + transportation_costs\n    \n    # Check if demands are met\n    if (any(colSums(quantities_matrix) < demand)) {\n        return(Inf)  # Penalize if demands are not met\n    }\n    \n    return(total_cost)\n}\n\n# Set up the Genetic Algorithm\nnum_vars <- 5 * 3  # 5 warehouses, 3 distribution centers\nga_result <- ga(\n    type = \"real-valued\",\n    fitness = function(x) -objective_function(x),  # Negate for minimization\n    lower = rep(0, num_vars),  # Minimum quantity\n    upper = rep(100, num_vars),  # Maximum quantity (adjust as needed)\n    popSize = 50,\n    maxiter = 100,\n    run = 10,\n    monitor = TRUE\n)\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](GA_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nKết quả tối ưu sẽ được trình bày ở bảng này (hơi màu mè 1 tí!!!)\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"gdviiwgshj\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#gdviiwgshj table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#gdviiwgshj thead, #gdviiwgshj tbody, #gdviiwgshj tfoot, #gdviiwgshj tr, #gdviiwgshj td, #gdviiwgshj th {\n  border-style: none;\n}\n\n#gdviiwgshj p {\n  margin: 0;\n  padding: 0;\n}\n\n#gdviiwgshj .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#gdviiwgshj .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#gdviiwgshj .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#gdviiwgshj .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#gdviiwgshj .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#gdviiwgshj .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#gdviiwgshj .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#gdviiwgshj .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#gdviiwgshj .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#gdviiwgshj .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#gdviiwgshj .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#gdviiwgshj .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#gdviiwgshj .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#gdviiwgshj .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#gdviiwgshj .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gdviiwgshj .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#gdviiwgshj .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#gdviiwgshj .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#gdviiwgshj .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gdviiwgshj .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#gdviiwgshj .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gdviiwgshj .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#gdviiwgshj .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gdviiwgshj .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#gdviiwgshj .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#gdviiwgshj .gt_left {\n  text-align: left;\n}\n\n#gdviiwgshj .gt_center {\n  text-align: center;\n}\n\n#gdviiwgshj .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#gdviiwgshj .gt_font_normal {\n  font-weight: normal;\n}\n\n#gdviiwgshj .gt_font_bold {\n  font-weight: bold;\n}\n\n#gdviiwgshj .gt_font_italic {\n  font-style: italic;\n}\n\n#gdviiwgshj .gt_super {\n  font-size: 65%;\n}\n\n#gdviiwgshj .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#gdviiwgshj .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#gdviiwgshj .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#gdviiwgshj .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#gdviiwgshj .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#gdviiwgshj .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#gdviiwgshj .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#gdviiwgshj .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#gdviiwgshj div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"8\" class=\"gt_heading gt_title gt_font_normal\" style><b>📦 Warehouse Shipment Summary</b></td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"8\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"Q29zdCBCcmVha2Rvd24gJiBNYWNoaW5lIEF2YWlsYWJpbGl0eQ==\"><span class='gt_from_md'>Cost Breakdown &amp; Machine Availability</span></span></td>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"Warehouse\">🏢 Warehouse</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"DC\">🏬 Distribution Center</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"Total_Weight\">📦 Total Weight (kg)</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"Weight_Category\">⚖️ Weight Category</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"Loading_Cost\">💼 Loading Cost</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"Transport_cost\">🚚 Transport Cost</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"Total_Cost\">💰 Total Cost</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"font-weight: bold;\" scope=\"col\" id=\"Has_Machine_Icon\">🛠 Machine</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\">WH 1</td>\n<td headers=\"DC\" class=\"gt_row gt_left\">DC 1</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right\" style=\"background-color: #8D86F3; color: #FFFFFF;\">3.36</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\">2.5 to 5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #FFDB95; color: #000000;\">$64,300.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right\" style=\"background-color: #FF88AF; color: #000000;\">$3,802,097.23</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right\" style=\"background-color: #67C664; color: #000000;\">$3,866,397.23</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left\" style=\"background-color: #D3D3D3;\">✅</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\">WH 2</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\">DC 1</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #A4BAEB; color: #000000;\">1.88</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\">1.5 to 2.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFEBB6; color: #000000;\">$40,680.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FF72A7; color: #000000;\">$5,037,171.35</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #56B552; color: #FFFFFF;\">$5,077,851.35</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left gt_striped\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\">WH 3</td>\n<td headers=\"DC\" class=\"gt_row gt_left\">DC 1</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right\" style=\"background-color: #ADD8E6; color: #000000;\">1.03</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\">&lt; 1.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #FFA500; color: #000000;\">$144,640.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right\" style=\"background-color: #FF3E99; color: #FFFFFF;\">$7,297,102.21</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right\" style=\"background-color: #31962F; color: #FFFFFF;\">$7,441,742.21</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\">WH 4</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\">DC 1</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #ADD8E6; color: #000000;\">1.04</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\">&lt; 1.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFF6CD; color: #000000;\">$25,130.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FF5FA1; color: #FFFFFF;\">$5,952,559.68</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #48A945; color: #FFFFFF;\">$5,977,689.68</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left gt_striped\" style=\"background-color: #D3D3D3;\">✅</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\">WH 5</td>\n<td headers=\"DC\" class=\"gt_row gt_left\">DC 1</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right\" style=\"background-color: #A3B8EC; color: #000000;\">1.92</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\">1.5 to 2.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #FFFAD6; color: #000000;\">$18,750.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right\" style=\"background-color: #FF94B3; color: #000000;\">$3,086,494.54</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right\" style=\"background-color: #72D06F; color: #000000;\">$3,105,244.54</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\">WH 1</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\">DC 2</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #ACD3E7; color: #000000;\">1.17</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\">&lt; 1.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFFFE0; color: #000000;\">$11,610.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FF1493; color: #FFFFFF;\">$8,264,855.30</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #228B22; color: #FFFFFF; font-weight: bold;\">$8,276,465.30</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left gt_striped\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\">WH 2</td>\n<td headers=\"DC\" class=\"gt_row gt_left\">DC 2</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right\" style=\"background-color: #A7C2EA; color: #000000;\">1.65</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\">1.5 to 2.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #FFBF59; color: #000000;\">$105,460.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right\" style=\"background-color: #FF84AD; color: #000000;\">$4,021,256.86</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right\" style=\"background-color: #63C260; color: #000000;\">$4,126,716.86</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left\" style=\"background-color: #D3D3D3;\">✅</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\">WH 3</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\">DC 2</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #5E46FB; color: #FFFFFF;\">5.09</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\">5 to 10</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFE4A7; color: #000000;\">$51,140.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFB6C1; color: #000000;\">$889,559.41</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #90EE90; color: #000000;\">$940,699.41</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left gt_striped\" style=\"background-color: #D3D3D3;\">✅</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\">WH 4</td>\n<td headers=\"DC\" class=\"gt_row gt_left\">DC 2</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right\" style=\"background-color: #8376F6; color: #FFFFFF;\">3.80</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\">2.5 to 5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #FFB540; color: #000000;\">$120,840.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right\" style=\"background-color: #FF9EB7; color: #000000;\">$2,449,208.30</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right\" style=\"background-color: #79D777; color: #000000;\">$2,570,048.30</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left\" style=\"background-color: #D3D3D3;\">✅</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\">WH 5</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\">DC 2</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #ABD2E7; color: #000000;\">1.21</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\">&lt; 1.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFD78C; color: #000000;\">$70,030.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FF429A; color: #FFFFFF;\">$7,188,382.30</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #349832; color: #FFFFFF;\">$7,258,412.30</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left gt_striped\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\">WH 1</td>\n<td headers=\"DC\" class=\"gt_row gt_left\">DC 3</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right\" style=\"background-color: #A7C3EA; color: #000000;\">1.61</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\">1.5 to 2.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #FFD78B; color: #000000;\">$70,730.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right\" style=\"background-color: #FF62A2; color: #FFFFFF;\">$5,831,987.58</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right\" style=\"background-color: #49AA46; color: #FFFFFF;\">$5,902,717.58</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left\" style=\"background-color: #D3D3D3;\">✅</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\">WH 2</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\">DC 3</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #A3B8EC; color: #000000;\">1.92</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\">1.5 to 2.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFCE79; color: #000000;\">$83,890.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFB5C0; color: #000000;\">$974,375.33</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #8EEC8E; color: #000000;\">$1,058,265.33</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left gt_striped\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\">WH 3</td>\n<td headers=\"DC\" class=\"gt_row gt_left\">DC 3</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right\" style=\"background-color: #7F6FF6; color: #FFFFFF;\">3.99</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\">2.5 to 5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #FFDA94; color: #000000;\">$64,990.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right\" style=\"background-color: #FF7FAC; color: #000000;\">$4,273,915.59</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right\" style=\"background-color: #60BF5D; color: #000000;\">$4,338,905.59</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left gt_striped\">WH 4</td>\n<td headers=\"DC\" class=\"gt_row gt_left gt_striped\">DC 3</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #0000FF; color: #FFFFFF;\">6.26</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left gt_striped\">5 to 10</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFAC24; color: #000000;\">$134,780.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #FFB4C0; color: #000000;\">$1,047,828.18</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right gt_striped\" style=\"background-color: #8DEB8C; color: #000000;\">$1,182,608.18</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left gt_striped\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n    <tr><td headers=\"Warehouse\" class=\"gt_row gt_left\">WH 5</td>\n<td headers=\"DC\" class=\"gt_row gt_left\">DC 3</td>\n<td headers=\"Total_Weight\" class=\"gt_row gt_right\" style=\"background-color: #A0AFED; color: #000000;\">2.18</td>\n<td headers=\"Weight_Category\" class=\"gt_row gt_left\">1.5 to 2.5</td>\n<td headers=\"Loading_Cost\" class=\"gt_row gt_right\" style=\"background-color: #FFC566; color: #000000;\">$96,240.00</td>\n<td headers=\"Transport_cost\" class=\"gt_row gt_right\" style=\"background-color: #FF74A8; color: #000000;\">$4,905,804.62</td>\n<td headers=\"Total_Cost\" class=\"gt_row gt_right\" style=\"background-color: #57B653; color: #FFFFFF;\">$5,002,044.62</td>\n<td headers=\"Has_Machine_Icon\" class=\"gt_row gt_left\" style=\"background-color: #F5E1F7;\">❌</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n# Báo cáo:\n\nVà cuối cùng, sau khi có kết quả, mình sẽ dùng các thư viện gồm: **Leaflet**, **gt**, và **biểu đồ Sankey** phục vụ những mục đích khác nhau cho trực quan hóa dữ liệu.\n\n1.  **Leaflet**: Đây là một thư viện mạnh mẽ để tạo bản đồ tương tác. Nó cho phép người dùng dễ dàng thêm các lớp, điểm đánh dấu và pop-up, rất lý tưởng để trực quan hóa dữ liệu địa lý. Leaflet đặc biệt hữu ích để hiển thị các dữ liệu như vị trí, lộ trình, hoặc phân bố không gian.\n\n2.  **gt**: Gói **gt** được thiết kế để tạo ra các bảng chất lượng cao trong R. Nó cho phép người dùng định dạng và tạo kiểu cho bảng một cách dễ dàng, giúp chúng trở nên hấp dẫn và dễ đọc. gt hỗ trợ các tính năng như định dạng tùy chỉnh, dòng tóm tắt, và thậm chí thêm chú thích, nâng cao cách trình bày dữ liệu trong báo cáo.\n\n3.  **Biểu đồ Sankey**: Những biểu đồ này được sử dụng để trực quan hóa luồng và mối quan hệ giữa các danh mục khác nhau. Trong R, gói **networkD3** hoặc **ggalluvial** có thể tạo ra biểu đồ Sankey, giúp hiểu cách các giá trị di chuyển giữa các nút, chẳng hạn như theo dõi hành trình người dùng hoặc hiển thị phân bổ tài nguyên.\n\nĐể kết nối các biểu đồ lại với nhau, ta thường nghĩ đến `Shiny` trong **R** nhưng vì chúng ta đang tạo website bằng **Quarto** nên output cuối cùng sẽ là một trang web tĩnh - *static website*. Do đó, nó sẽ không phản hồi với thông tin đầu vào của người dùng hoặc chạy bất kỳ mã R nào. Bạn có thể hình dung giống như bạn đang muốn xem biểu đồ về doanh thu trong tháng tiếp theo trên 1 biểu đồ trong Word - không thể làm được vì nó thuộc dạng văn bản, bạn chỉ đọc hoặc nhìn chứ không tương tác được.\n\nTuy vậy, sau một thời gian tìm hiểu, mình cũng tìm được cách để nhúng **Shiny** vào R để hiển thị trên Quarto. Nguồn tài liệu bạn có thể kham khảo ở trang này [r-shinylive-demo](https://github.com/coatless-quarto/r-shinylive-demo).\n\n::: {.callout-note}\n**Shinylive** là 1 extension của Quarto và được kích hoạt bằng: \n```yaml\nfilter:\n  - quarto-ext/shinylive\n```\ncác extension trong filter sẽ ảnh hưởng đến kết quả sau khi Quarto render xong. App Shiny chỉ xuất hiện sau đó, nên bạn cần đợi thêm tùy theo độ nặng của app.\n::: \n\n:::{.column-page}\n\n```{shinylive-r}\n#| viewerHeight: 1000\n#| standalone: true\n#| fig-cap: \"Biểu đồ 3: Dashboard về lịch trình vận chuyển hàng dự tính\"\npacman::p_load(\n  leaflet,\n  dplyr,\n  networkD3,\n  shiny,\n  bslib,\n  DT,\n  htmltools\n)\n\n# Add value:\n# Convert GA solution to a matrix\n# Optimal quantities matrix\noptimal_quantities <- matrix(c(\n  43.306058, 10.87137, 13.26283,\n  15.524054, 30.42748, 48.86716,\n  7.599769, 44.93531, 27.46289,\n  18.556927, 17.60396, 41.85203,\n  16.305016, 13.15498, 21.79634\n), nrow = 5, ncol = 3, byrow = TRUE)\n\n# Warehouse data:\nwarehouses <- data.frame(\n  ID = 1:5,\n  Latitude = c(21.0285, 16.0545, 10.7769, 14.0583, 19.8060),\n  Longitude = c(105.8040, 108.2022, 106.6957, 108.2772, 105.7460),\n  District = c(\"Đống Đa\", \"Hải Châu\", \"Quận 1\", \"Mang Yang\", \"Đông Sơn\"),\n  Province = c(\"Hà Nội\", \"Đà Nẵng\", \"Hồ Chí Minh\", \"Gia Lai\", \"Thanh Hóa\"),\n  Address = c(\n    \"2RH3+9HX Đống Đa, Hà Nội, Việt Nam\",\n    \"3632+RV4 Hải Châu, Đà Nẵng, Việt Nam\",\n    \"QMGW+Q74 Quận 1, Hồ Chí Minh, Việt Nam\",\n    \"375G+8VG Mang Yang, Gia Lai, Việt Nam\",\n    \"RP4W+99X Đông Sơn, Thanh Hóa, Việt Nam\"\n  )\n)\n\n# Distribution center data:\ndistribution_centers <- data.frame(\n  ID = 1:3,\n  Latitude = c(17.97486, 11.77690, 15.12233),\n  Longitude = c(102.6309, 106.6957, 108.7994),\n  District = c(\"Viêng Chăn\", \"Lộc Ninh\", \"Quảng Ngãi\"),\n  Province = c(\"Lào\", \"Bình Phước\", \"Quảng Ngãi\"),\n  Address = c(\n    \"XJFJ+W8X Viêng Chăn, Lào\",\n    \"QMGW+Q74 Lộc Ninh, Bình Phước, Việt Nam\",\n    \"4QCX+WPQ Quảng Ngãi, Việt Nam\"\n  )\n)\n\n# Create a data frame with the warehouse data\nresult <- data.frame(\n  Warehouse = c(\"WH 1\", \"WH 2\", \"WH 3\", \"WH 4\", \"WH 5\",\n                \"WH 1\", \"WH 2\", \"WH 3\", \"WH 4\", \"WH 5\",\n                \"WH 1\", \"WH 2\", \"WH 3\", \"WH 4\", \"WH 5\"),\n  DC = c(\"DC 1\", \"DC 1\", \"DC 1\", \"DC 1\", \"DC 1\",\n         \"DC 2\", \"DC 2\", \"DC 2\", \"DC 2\", \"DC 2\",\n         \"DC 3\", \"DC 3\", \"DC 3\", \"DC 3\", \"DC 3\"),\n  Has_Machine = c(\"Yes\", \"No\", \"No\", \"No\", \"No\",\n                  \"No\", \"No\", \"No\", \"No\", \"No\",\n                  \"No\", \"No\", \"No\", \"No\", \"No\"),\n  Total_Weight = c(4.3306058, 1.5524054, 0.7599769, 1.8556927, 1.6305016,\n                   1.0871366, 3.0427479, 4.4935308, 1.7603961, 1.3154977,\n                   1.3262832, 4.8867159, 2.7462887, 4.1852028, 2.1796338),\n  Weight_Category = c(\"2.5 to 5\", \"1.5 to 2.5\", \"< 1.5\", \"1.5 to 2.5\", \"1.5 to 2.5\",\n                      \"< 1.5\", \"2.5 to 5\", \"2.5 to 5\", \"1.5 to 2.5\", \"< 1.5\",\n                      \"< 1.5\", \"2.5 to 5\", \"2.5 to 5\", \"2.5 to 5\", \"1.5 to 2.5\"),\n  Loading_Cost = c(64300, 40680, 144640, 38790, 18750,\n                   11610, 97870, 36380, 69120, 70030,\n                   143740, 91150, 64990, 114230, 96240),\n  Transport_cost = c(3802097.2, 5037171.3, 7297102.2, 5952559.7, 3086494.5,\n                     8264855.3, 4021256.9, 889559.4, 2449208.3, 7188382.3,\n                     5831987.6, 974375.3, 4273915.6, 1047828.2, 4905804.6)\n)\n\n# Custom icon:\nwarehouse_icon <- makeIcon(\n  iconUrl = \"https://raw.githubusercontent.com/Loccx78vn/genetic-algorithm-method/refs/heads/main/img/warehouse_icon.png\",\n  iconWidth = 30,\n  iconHeight = 30\n)\n\ndc_icon <- makeIcon(\n  iconUrl = \"https://raw.githubusercontent.com/Loccx78vn/genetic-algorithm-method/refs/heads/main/img/distribution_center.png\",\n  iconWidth = 30,\n  iconHeight = 30\n)\n# Define a custom theme\nmy_theme <- bs_theme(\n  version = 5,\n  bootswatch = \"litera\",\n  primary = \"#3b5998\",\n  secondary = \"#5cb85c\",\n  success = \"#5cb85c\",\n  info = \"#5bc0de\",\n  warning = \"#f0ad4e\",\n  danger = \"#d9534f\"\n)\n\n# Define UI\nui <- page_fluid(\n  theme = my_theme,\n  \n  # Custom CSS for better visualization\n  tags$head(\n    tags$style(HTML(\"\n      .card-header {\n        background-color: #3b5998;\n        color: white;\n        font-weight: bold;\n      }\n      .nav-tabs .nav-link.active {\n        font-weight: bold;\n        color: #3b5998;\n        border-bottom: 2px solid #3b5998;\n      }\n      .nav-tabs .nav-link {\n        color: #6c757d;\n      }\n      .checkbox span {\n        font-weight: normal;\n      }\n      .checkbox input:checked + span {\n        font-weight: bold;\n        color: #3b5998;\n      }\n      .warehouse-selection {\n        border-left: 4px solid #3b5998;\n        padding-left: 10px;\n      }\n      .dataTables_wrapper {\n        padding: 10px;\n        border-radius: 5px;\n      }\n      .table thead th {\n        background-color: #e9ecef;\n      }\n      .leaflet-container {\n        border-radius: 8px;\n        box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      }\n      .sankey-container {\n        border: 1px solid #dee2e6;\n        border-radius: 8px;\n        padding: 10px;\n        background-color: #f8f9fa;\n      }\n      .summary-stats {\n        background-color: #f8f9fa;\n        border-radius: 5px;\n        padding: 10px;\n        margin-bottom: 15px;\n        border-left: 4px solid #3b5998;\n      }\n    \"))\n  ),\n  \n  # Page header - simplified\n  card(\n    card_header(\n      tags$div(\n        class = \"d-flex align-items-center\",\n        tags$img(\n          src = \"https://raw.githubusercontent.com/Loccx78vn/genetic-algorithm-method/refs/heads/main/img/supply-chain-management.png\", \n          height = \"30px\", \n          style = \"margin-right: 10px;\"\n        ),\n        h3(\"Warehouse Distribution Dashboard\", class = \"m-0\")\n      )\n    ),\n    card_body(\n      \"This dashboard shows the optimal distribution of goods from warehouses to distribution centers.\"\n    )\n  ),\n  \n  layout_sidebar(\n    sidebar = sidebar(\n      title = \"Controls\",\n      width = 300,\n      bg = \"#f8f9fa\",\n      class = \"warehouse-selection\",\n      \n      h4(\"Warehouse Selection\", class = \"mb-3 text-primary\"),\n      \n      p(\"Select one or more warehouses to view their distribution data on the map and in the charts.\"),\n      \n      checkboxGroupInput(\n        inputId = \"warehouse\", \n        label = NULL, \n        choices = setNames(\n          paste(\"Warehouse\", 1:5),\n          paste(\"Warehouse\", 1:5, \"-\", warehouses$District, \",\", warehouses$Province)\n        ),\n        selected = paste(\"Warehouse\", 1)\n      ),\n      \n      hr(),\n      \n      tags$div(\n        class = \"alert alert-info\",\n        icon(\"info-circle\"), \n        \"Click on the map markers for detailed location information.\"\n      )\n    ),\n    \n    # Main content - restructured to put summary above map\n    tabsetPanel(\n      tabPanel(\n        title = \"Interactive Map\", \n        icon = icon(\"map\"),\n        card(\n          full_screen = TRUE,\n          height = \"650px\", # Increased height\n          card_body(\n            # Summary stats placed above the map\n            tags$div(\n              class = \"summary-stats\",\n              uiOutput(\"summary_stats\")\n            ),\n            # Map with increased height\n            leafletOutput(\"map\", height = \"550px\") # Increased map height\n          )\n        )\n      ),\n      \n      tabPanel(\n        title = \"Cost Analysis\", \n        icon = icon(\"table\"),\n        card(\n          full_screen = TRUE,\n          height = \"650px\", # Increased to match\n          card_header(\"Cost Table\"),\n          DTOutput(\"cost_table\")\n        )\n      ),\n      \n      tabPanel(\n        title = \"Flow Diagram\", \n        icon = icon(\"diagram-project\"),\n        card(\n          full_screen = TRUE,\n          height = \"650px\", # Increased to match\n          card_header(\"Distribution Flow Diagram\"),\n          tags$div(\n            class = \"sankey-container\",\n            uiOutput(\"sankey_diagram\")\n          )\n        )\n      )\n    )\n  )\n)\n\n# Define server logic\nserver <- function(input, output, session) {\n  \n  location <- reactive({\n    req(input$warehouse) \n    as.numeric(sub(\"Warehouse \", \"\", input$warehouse))\n  })\n  \n  # Create the leaflet map\n  output$map <- renderLeaflet({\n    req(location())\n    \n    # Color palette for routes\n    route_colors <- c(\"#FF5733\", \"#33A8FF\", \"#33FF57\", \"#D433FF\", \"#FFD133\")\n    \n    # Initialize the map\n    map <- leaflet() |>\n      addTiles() |>\n      addProviderTiles(providers$CartoDB.Positron) |>\n      addMarkers(data = warehouses |> filter(ID %in% location()), \n                 lat = ~Latitude, \n                 lng = ~Longitude, \n                 label = ~paste0(\"<strong> ID Warehouse: </strong> \", ID, \"<br/> \",\n                                 \"<strong> Province: </strong> \", Province, \"<br/> \",\n                                 \"<strong> District: </strong> \", District, \"<br/> \",\n                                 \"<strong> Address: </strong> \", Address, \"<br/> \") |> \n                   lapply(htmltools::HTML),\n                 icon = warehouse_icon) |>\n      addMarkers(data = distribution_centers, \n                 lat = ~Latitude, \n                 lng = ~Longitude, \n                 label = ~paste0(\"<strong> ID Distribution Center: </strong> \", ID, \"<br/> \",\n                                 \"<strong> Province: </strong> \", Province, \"<br/> \",\n                                 \"<strong> District: </strong> \", District, \"<br/> \",\n                                 \"<strong> Address: </strong> \", Address, \"<br/> \") |> \n                   lapply(htmltools::HTML),\n                 icon = dc_icon)\n    \n    qty_data <- optimal_quantities[location(), , drop = FALSE]  \n    \n    # Add routes based on the optimal quantities with different colors\n    route_colors <- c(\"#FF5733\", \"#33A8FF\", \"#33FF57\", \"#D433FF\", \"#FFD133\")\n    line_weights <- c(2, 3, 4, 5, 6)  # Variable line weights based on quantity\n    \n    # Add routes based on the optimal quantities\n    for (i in seq_along(location())) {\n      wh_id <- location()[i]\n      wh_idx <- which(warehouses$ID == wh_id)\n      color_idx <- (wh_id - 1) %% length(route_colors) + 1\n      \n      for (j in 1:ncol(qty_data)) {\n        if (qty_data[i, j] > 0) {\n          route_start <- warehouses[warehouses$ID == wh_id, c(\"Longitude\", \"Latitude\")]\n          route_end <- distribution_centers[distribution_centers$ID == j, c(\"Longitude\", \"Latitude\")]\n          \n          # Calculate line weight based on quantity (normalized)\n          weight_multiplier <- qty_data[i, j] / max(optimal_quantities) * 5\n          weight <- max(2, min(6, weight_multiplier + 2))  # Scale between 2-6\n          \n          map <- map |>\n            addPolylines(\n              lat = c(route_start$Latitude, route_end$Latitude),\n              lng = c(route_start$Longitude, route_end$Longitude),\n              color = route_colors[color_idx],\n              weight = weight,\n              opacity = 0.7,\n              label = paste0(\"Quantity: \", round(qty_data[i, j], 2)),\n              dashArray = \"5, 5\",\n              popup = paste0(\n                \"<strong>From:</strong> Warehouse \", wh_id,\n                \"<br><strong>To:</strong> Distribution Center \", j,\n                \"<br><strong>Quantity:</strong> \", round(qty_data[i, j], 2)\n              )\n            )\n        }\n      }\n    }\n    \n    map  # Return the modified map\n  })\n  \n  # Render the cost table\n  output$cost_table <- renderDT({\n    req(location())\n    \n    cost_data <- result |> \n      filter(Warehouse %in% paste(\"WH\", location())) |> \n      select(c(Warehouse, DC, Loading_Cost, Transport_cost))\n    \n    # Add a Total Cost column\n    cost_data$Total_Cost <- cost_data$Loading_Cost + cost_data$Transport_cost\n    \n    # Format currency values\n    cost_data$Loading_Cost <- formatC(cost_data$Loading_Cost, format=\"f\", digits=0, big.mark=\",\")\n    cost_data$Transport_cost <- formatC(cost_data$Transport_cost, format=\"f\", digits=0, big.mark=\",\")\n    cost_data$Total_Cost <- formatC(cost_data$Total_Cost, format=\"f\", digits=0, big.mark=\",\")\n    \n    datatable(cost_data,\n              options = list(\n                pageLength = 10,\n                dom = 'Bfrtip',\n                buttons = c('copy', 'csv', 'excel'),\n                initComplete = JS(\n                  \"function(settings, json) {\",\n                  \"$(this.api().table().header()).css({'background-color': '#3b5998', 'color': 'white'});\",\n                  \"}\"\n                ),\n                columnDefs = list(\n                  list(className = 'dt-center', targets = \"_all\")\n                )\n              ),\n              rownames = FALSE,\n              class = 'compact stripe hover') |>\n      formatStyle(\n        'Warehouse',\n        backgroundColor = styleEqual(\n          paste(\"WH\", 1:5), \n          c('#FFC3A0', '#A0D2FF', '#C8FFB0', '#D5A0FF', '#FFF0A0')\n        )\n      ) |>\n      formatStyle(\n        'DC',\n        backgroundColor = styleEqual(\n          c(\"DC 1\", \"DC 2\", \"DC 3\"), \n          c('#FFDDC3', '#C3E5FF', '#DDFFC3')\n        )\n      )\n  })\n  \n  \n  # Create and render the Sankey diagram\n  selected_indices <- reactive({\n    as.numeric(sub(\"Warehouse \", \"\", input$warehouse))\n  })\n  \n  # Filter data based on selected warehouses\n  filtered_data <- reactive({\n    result |>\n      filter(Warehouse %in% paste(\"WH\",input$warehouse))\n  })\n\n  # Create and render the Sankey diagram\n  output$sankey_diagram <- renderUI({\n    req(length(selected_indices()) > 0)\n    \n    # Create links data frame\n    links <- data.frame()\n    \n    # Add links for each selected warehouse\n    for (i in 1:length(selected_indices())) {\n      wh_idx <- selected_indices()[i]\n      wh_data <- optimal_quantities[wh_idx, , drop = FALSE]\n      \n      # Add links for each DC\n      for (j in 1:ncol(wh_data)) {\n        if (wh_data[1, j] > 0) {\n          links <- rbind(links, data.frame(\n            source = i - 1,  # Use index in selected warehouses (0-based)\n            target = length(selected_indices()) + j - 1,  # DCs come after warehouses\n            value = wh_data[1, j]\n          ))\n        }\n      }\n    }\n    \n    # Only proceed if we have links\n    req(nrow(links) > 0)\n    \n    # Create nodes data frame\n    nodes <- data.frame(\n      name = c(paste(\"Warehouse\", selected_indices()), paste(\"DC\", 1:3))\n    )\n    \n    # Create the Sankey network\n    sankey <- sankeyNetwork(\n      Links = links, \n      Nodes = nodes, \n      Source = \"source\", \n      Target = \"target\", \n      Value = \"value\",\n      NodeID = \"name\",\n      height = 500,  \n      width = 800,\n      fontSize = 12,\n      nodeWidth = 20,\n      sinksRight = TRUE\n    )\n    \n    # Customize tooltips and add click functionality to show a value panel\n    sankey <- htmlwidgets::onRender(sankey, \"\n    function(el, x) {\n      // Create a div for the value panel\n      var valuePanel = d3.select('body').append('div')\n        .attr('class', 'value-panel')\n        .style('position', 'absolute')\n        .style('padding', '8px')\n        .style('background', 'lightgray')\n        .style('border', '1px solid gray')\n        .style('border-radius', '4px')\n        .style('opacity', 0);  // Start hidden\n\n      // Append title for tooltips on hover\n      d3.selectAll('.link')\n        .append('title')\n        .text(function(d) { return 'Quantity: ' + d.value.toFixed(2); });  // Show value on hover\n\n      // Add click event to show the value panel\n      d3.selectAll('.link')\n        .on('click', function(event, d) {\n          // Ensure we get the correct value\n          var value = d3.select(this).datum().value;\n          var source = nodes.name[d.source.index];\n          var target = nodes.name[d.target.index];\n\n          // Position the value panel near the mouse cursor\n          valuePanel\n            .style('left', (event.pageX + 5) + 'px')\n            .style('top', (event.pageY + 5) + 'px')\n            .style('opacity', 1)  // Make it visible\n            .html('From: ' + source + '<br>To: ' + target + '<br>Quantity: ' + value.toFixed(2));  // Set the text with details\n\n          // Hide the panel after a delay\n          setTimeout(function() {\n            valuePanel.style('opacity', 0);\n          }, 3000);  // Change the delay as needed\n        });\n    }\n    \")\n    \n    # Add title and caption\n    tagList(\n      sankey,\n      tags$p(style = \"font-size: 12px; text-align: right;\", \n             \"A wider arrow indicates that a larger quantity is being sent from that warehouse to a distribution center.\")\n    )\n  })\n  \n  # Add a summary statistics output at the bottom of the map tab\n  output$summary_stats <- renderUI({\n    req(location())\n    \n    selected_data <- result |> \n      filter(Warehouse %in% paste(\"WH\", location()))\n    \n    total_loading <- sum(selected_data$Loading_Cost)\n    total_transport <- sum(selected_data$Transport_cost)\n    total_weight <- sum(selected_data$Total_Weight)\n    \n    div(\n      class = \"mt-3 p-3 bg-light rounded\",\n      h4(\"Summary Statistics\", class = \"text-primary mb-3\"),\n      div(class = \"row\",\n          div(class = \"col-md-4\",\n              div(class = \"card text-white bg-primary mb-3\",\n                  div(class = \"card-body\",\n                      h5(class = \"card-title\", \"Total Weight\"),\n                      h3(class = \"card-text\", paste0(round(total_weight, 2), \" tons\"))\n                  )\n              )\n          ),\n          div(class = \"col-md-4\",\n              div(class = \"card text-white bg-success mb-3\",\n                  div(class = \"card-body\",\n                      h5(class = \"card-title\", \"Total Loading Cost\"),\n                      h3(class = \"card-text\", paste0(\"₫\", formatC(total_loading, format=\"f\", digits=0, big.mark=\",\")))\n                  )\n              )\n          ),\n          div(class = \"col-md-4\",\n              div(class = \"card text-white bg-info mb-3\",\n                  div(class = \"card-body\",\n                      h5(class = \"card-title\", \"Total Transport Cost\"),\n                      h3(class = \"card-text\", paste0(\"₫\", formatC(total_transport, format=\"f\", digits=0, big.mark=\",\")))\n                  )\n              )\n          )\n      )\n    )\n  })\n}\n\n# Run the application \nshinyApp(ui = ui, server = server)\n```\n:::\n\nBạn có thể thấy với **dashboard** như vậy, ta có thể xem được nhiều thông tin hơn như:\n\n-   Vị trí cụ thể của từng *WH* và *DC* cũng như là các tuyến đường dự kiến bằng các đường thẳng minh họa. (Xem **Map tab**)\n\n-   Thông tin về chi phí *Loading cost* và *Transporation cost* cũng như lượng hàng cần vận chuyển cho từng nhà kho. (Xem **Table and Sankey tab**)\n\nBạn có thể xem cho 1 hoặc nhiều nhà kho bằng cách *click* trên thanh **Filter**. Ngoài ra, đặc biệt với **Sankey chart**, bạn cần giữ hoặc *click* chuột vào tuyến để xem được số lượng hàng.\n\nTuy rất thích R nhưng mình vẫn không thích xây dựng dashboard bằng R lắm vì quá nặng về code và không hiệu quả về thời gian, nguồn lực. Các tools khác mình ưu tiên hơn như **Power BI**, **Tableau** hoặc các **BIs** mà công ty bạn sử dụng trong công việc hằng ngày.\n\n\n```{=html}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Go to Next Page</title>\n    <style>\n        /* Global Styles */\n        body {\n            font-family: 'Tahoma', sans-serif;\n            display: flex;\n            flex-direction: column;  /* Stack content and footnote vertically */\n            justify-content: center;  /* Center content vertically */\n            align-items: center;      /* Center content horizontally */\n            margin: 0;\n            background-color: $secondary-color;\n            box-sizing: border-box;\n            min-height: 80vh; /* Adjusted to 80vh to ensure it's not too high */\n        }\n\n        /* Container Styling (Main Content) */\n        .container {\n            text-align: center;\n            padding: 20px 40px; /* Adjust padding for more compactness */\n            background-color: white;\n            border-radius: 12px;\n            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n            width: auto;  /* Auto width to fit content */\n            max-width: 380px;  /* Adjusted max-width for a smaller container */\n            box-sizing: border-box;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n            margin-top: 20px;  /* Space from the top of the page */\n        }\n\n        /* Link Styling */\n        .link {\n            font-size: 20px;  /* Adjusted font size for readability */\n            color: #007bff;\n            text-decoration: none;\n            font-weight: 700;\n            display: inline-flex;\n            align-items: center;\n            cursor: pointer;\n            padding: 12px 30px;\n            border-radius: 6px;\n            transition: all 0.3s ease;\n        }\n\n        .link:hover {\n            color: #0056b3;\n            text-decoration: none;\n            background-color: #e6f0ff;\n        }\n\n        /* Arrow Styling */\n        .arrow {\n            margin-left: 12px;\n            font-size: 24px;\n            transition: transform 0.3s ease, font-size 0.3s ease;\n        }\n\n        .link:hover .arrow {\n            transform: translateX(8px);\n            font-size: 26px;\n        }\n\n        /* Focus State for Accessibility */\n        .link:focus {\n            outline: 2px solid #0056b3;\n        }\n\n        /* Footer Styling (Footnote) */\n        .footer {\n            font-size: 14px;\n            color: #777;\n            margin-top: 20px;  /* Space between content and footnote */\n            text-align: center;\n            width: 100%;\n        }\n\n        /* Mobile-Friendly Adjustments */\n        @media (max-width: 600px) {\n            .link {\n                font-size: 18px;\n                padding: 8px 15px;  /* Smaller padding for mobile devices */\n            }\n\n            .arrow {\n                font-size: 18px;\n                margin-left: 8px;\n            }\n\n            .container {\n                padding: 15px 30px;  /* Smaller padding on mobile */\n                max-width: 90%;  /* Ensure container fits better on small screens */\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <a href=\"https://loccx78vn.github.io/genetic-algorithm-method/MILP.html\" class=\"link\" tabindex=\"0\">\n            Go to Next Page\n            <span class=\"arrow\">➔</span>\n        </a>\n    </div>\n</body>\n</html>\n```\n",
    "supporting": [
      "GA_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/viz-1.8.2/viz.js\"></script>\n<link href=\"site_libs/DiagrammeR-styles-0.2/styles.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/grViz-binding-1.0.11/grViz.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}